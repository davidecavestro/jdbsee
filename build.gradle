plugins {
//  id "net.ltgt.apt" version "0.10"
  id "net.ltgt.apt-idea" version "0.13"

  id "application"
  id "groovy"

  // generates coverage data
  // see homepage: http://eclemma.org/jacoco/
  // see plugin: https://docs.gradle.org/current/userguide/jacoco_plugin.html
  id "jacoco"

  // builds a dashboard for all reports
  // see plugin: https://docs.gradle.org/current/userguide/buildDashboard_plugin.html
  id 'build-dashboard'
  id 'com.github.kt3k.coveralls' version '2.6.3'
}

//apply plugin: 'java'
//apply plugin: 'application'
//

group = 'com.github.davidecavestro.jdbsee'
version = '0.0.1-SNAPSHOT'

mainClassName = 'com.github.davidecavestro.jdbsee.jdbcli.CliApplication'

repositories {
  mavenCentral()
  maven {url = 'https://repo.adobe.com/nexus/content/repositories/public'}
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileGroovy {
  groovyOptions.optimizationOptions.indy = true
}

configurations{
  drivers
}
// Add Dagger dependencies
dependencies {
  apt 'com.google.dagger:dagger-compiler:2.14.1'
  compile 'com.google.dagger:dagger:2.14.1'
  compile('com.google.guava:guava:24.0-jre')
  compile 'org.codehaus.groovy:groovy-all:2.4.13:indy'
  compile 'org.apache.ivy:ivy:2.4.0'

  compile 'org.reflections:reflections:0.9.11'

//  compile 'com.github.davidmoten:rxjava2-jdbc:0.1-RC32'
  compile 'info.picocli:picocli:2.2.1'
  compile 'de.vandermeer:asciitable:0.3.2'
  compile 'de.vandermeer:skb-interfaces:0.0.2'

  compile 'org.jdbi:jdbi3-core:3.0.1'
  compile 'org.jdbi:jdbi3-sqlobject:3.0.1'

//  compile 'org.apache.tomcat:tomcat-jdbc:9.0.4'

  compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.9.4'
  compile 'org.slf4j:jul-to-slf4j:1.7.25'
  runtime 'org.slf4j:slf4j-api:1.7.25'
  compile "org.slf4j:log4j-over-slf4j:1.7.25"
  runtime 'ch.qos.logback:logback-classic:1.2.3'

  compile "org.flywaydb:flyway-core:5.0.7"
  runtime 'org.hsqldb:hsqldb:2.4.0'

  compile 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-api:3.1.3'
  compile 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-spi:3.1.3'
  compile 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-api-maven:3.1.3'
  compile 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-spi-maven:3.1.3'
  compile 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-impl-maven:3.1.3'
  compile 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-impl-maven-archive:3.1.3'

  testCompile "org.spockframework:spock-core:1.1-groovy-2.4"

  // optional dependencies for using Spock
  testCompile "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
  testRuntime "net.bytebuddy:byte-buddy:1.6.5"          // allows mocking of classes (in addition to interfaces)
  testRuntime "org.objenesis:objenesis:2.5.1"    // allows mocking of classes without default constructor (together with CGLIB)

  testCompile 'junit:junit:4.12'
  testCompile 'commons-io:commons-io:2.6'
  testRuntime 'com.h2database:h2:1.4.196'
  testRuntime 'org.hsqldb:hsqldb:2.4.0'


  //drivers distribution
  drivers 'org.hsqldb:hsqldb:2.4.0'
  drivers 'com.h2database:h2:1.4.196'
  drivers 'mysql:mysql-connector-java:8.0.8-dmr'
  drivers 'org.postgresql:postgresql:42.2.1'
  drivers 'com.microsoft.sqlserver:mssql-jdbc:6.3.6.jre8-preview'
  drivers 'net.sf.jt400:jt400:9.4'
  drivers 'oracle:ojdbc:1.4'

}

configurations.all {
  exclude group: "org.slf4j", module: "slf4j-log4j12"
  exclude group: "log4j", module: "log4j"
}


distributions {
  full {
    contents {
      with project.distributions.main.getContents()

      into ('dropins') {
        from {
          configurations.drivers
        }
      }
    }
  }
}

//needed to allow hsql use absolute paths
applicationDefaultJvmArgs = ["-Dtextdb.allow_full_path=true"]

def generatedResources = "$buildDir/generated-resources/main"

sourceSets {
  main {
    //register an output folder on the main SourceSet:
    output.dir(generatedResources, builtBy: 'generateVersionTxt')
    //it is now a part of the 'main' classpath and will be a part of the jar
  }
}


//a task that generates the resources:
task generateVersionTxt {
  description 'Creates a version.txt file with build info that is added to the root of the jar'
  doLast {
    new File(generatedResources).mkdirs()
    def generated = new File(generatedResources, "version.txt")
    generated.text = """
        Version: $rootProject.version
        Buildtime: ${new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date())}
        Application-name: $rootProject.name $project.name
        """
  }
}

CreateStartScripts startScripts = project.startScripts
startScripts.with {
  doLast {
    unixScript.text = unixScript.text.replaceFirst('DEFAULT_JVM_OPTS=""',
        'DEFAULT_JVM_OPTS="-D\\$\\{APP_NAME}.home=\\$\\{APP_HOME}"')
    windowsScript.text = windowsScript.text.replaceFirst('(?<=DEFAULT_JVM_OPTS=)(.*)(?=\r\n)',
        '$1 "-Dtcproxy.config.url=file:%~dp0../conf/proxy.properties"')
  }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}
